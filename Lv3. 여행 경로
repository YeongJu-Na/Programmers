import java.util.*;

class Solution {
    static int len;
    static String[][] ts;
    static String ans;
    
    public String[] solution(String[][] tickets) {
        len = tickets.length;
        ans = "";
        String[] answer = new String[len+1];
        
        /*
        Arrays.sort(tickets,new Comparator<String[]>(){
            public int compare(String[] s1, String[] s2){
                return s1[1].compareTo(s2[1]);
            }
        });*/
        ts = tickets;
        
        dfs("ICN",new boolean[len],0,"ICN");
        
        for(int i=0;i<=len;i++){
            answer[i]=ans.substring(3*i,3*(i+1));
        }
        
        return answer;
    }
    static void dfs(String start, boolean[] visited, int cnt, String temp){
        if(cnt==len){
          // ans보다 알파벳 빠른 경로 존재 시
            if(ans.equals("") || temp.compareTo(ans)<0) ans = temp;
            return;
        }
        for(int i=0;i<len;i++){
            if(visited[i]) continue;
            if(!ts[i][0].equals(start)) continue;
            String str = ts[i][1];
            visited[i]=true;
            dfs(str,visited,cnt+1,temp+str);
            visited[i]=false;
        }
    }
}
