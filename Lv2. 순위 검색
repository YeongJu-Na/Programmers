import java.util.*;
class Solution {
     
    public int[] solution(String[] info, String[] query) {
        int[] answer = new int[query.length];
        
        HashMap<String, ArrayList<Integer>> hm = new HashMap<>();
        String[] temp = new String[5];
        
        for(String str: info){
            temp = str.split(" ");
            int score = Integer.parseInt(temp[4]);
            StringBuilder sb=new StringBuilder();
            
            for(int i=0;i<(1<<4);i++){
                sb = new StringBuilder();
                for(int j=0;j<4;j++){
                    if((i & (1<<j))!=0) sb.append("-");
                    else sb.append(temp[j]);
                }
                if(!hm.containsKey(sb.toString())){
                    hm.put(sb.toString(),new ArrayList<>());
                }
                hm.get(sb.toString()).add(score);
            }
        }
        
        for(ArrayList<Integer> al: hm.values()){
            Collections.sort(al);
        }
        
        for(int i=0;i<query.length;i++){
            String s = query[i].replaceAll(" and ","");
            int score= Integer.parseInt(s.split(" ")[1]);
            if(!hm.containsKey(s.split(" ")[0])) answer[i]=0;
            else answer[i]=find(hm.get(s.split(" ")[0]), score);
            
        }
        
        return answer;
    }
    
    // al 에서 score보다 크거나 같은 점수 개수
    static int find(ArrayList<Integer> al, int score){
        int start = 0;
        int end = al.size();
        
        while(start<end){
            int mid = (start+end)/2;
            if(al.get(mid)<score) start = mid+1;
            else end = mid;
        }
        return al.size()-end;
    }
    
}
