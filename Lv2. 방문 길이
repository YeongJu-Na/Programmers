import java.util.*;
class Solution {
    public int solution(String dirs) {
        int answer = dirs.length();
        
        int x = 0, y = 0;   // 처음 위치
        
        // x+y가 작은 값을 먼저
        HashSet<Road> hs = new HashSet<>();
        
        for(char c: dirs.toCharArray()){
            int nx=x, ny =y;
            if(c=='U') nx++;
            else if(c=='R') ny++;
            else if(c=='D') nx--;
            else  ny--;   //c=='L'
            
            if(!isRange(nx,ny)) continue;
            
            if(nx+ny<x+y) hs.add(new Road(nx,ny,x,y));
            else hs.add(new Road(x,y,nx,ny));
            
            x=nx;
            y=ny;
        }
        
        return hs.size();
    }
    static boolean isRange(int x, int y){
        if(x<-5||y<-5||x>5||y>5) return false;
        return true;
    }
}
// x1,y1 -> x2,y2 로 가는 길, x+y가 작은 값을 먼저 
class Road{
    int x1,y1,x2,y2;
    Road(int x1, int y1, int x2, int y2){
        this.x1 =x1;
        this.x2 =x2;
        this.y1=y1;
        this.y2=y2;
    }
    
    public int hashCode(){
        return Objects.hash(this.x1,this.y1,this.x2,this.y2);
    }
    
    @Override public boolean equals(Object o){
        if(o instanceof Road){
            Road rr = (Road)o;
            if(this.x1==rr.x1&&this.y1==rr.y1&&this.x2==rr.x2&&this.y2==rr.y2) return true;
        }
        return false;
    }
}
