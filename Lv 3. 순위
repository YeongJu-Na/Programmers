import java.util.*;
class Solution {
    static int INF = (int)1e9;
    public int solution(int n, int[][] results) {
        int answer = 0;
        int[][] dist= new int[n+1][n+1];
        for(int i=0;i<n+1;i++){
            Arrays.fill(dist[i],INF);
            //dist[i][i]=0;
        }
        
        for(int i=0;i<results.length;i++){
            dist[results[i][0]][results[i][1]]=1;
        }
        // 플로이드 와샬
        for(int k=1;k<n+1;k++){
            for(int i=1;i<n+1;i++){
                for(int j=1;j<n+1;j++){
                    if(i==j) continue;
                    if(dist[i][j]>dist[i][k]+dist[k][j]){
                        dist[i][j]=dist[i][k]+dist[k][j];
                    }
                }
            }
        }
        // 
        for(int i=1;i<n+1;i++){
            boolean ans=true;
            for(int j=1;j<n+1;j++){
                if(i==j) continue;
                if(dist[i][j]==INF&&dist[j][i]==INF){
                    ans=false;
                    break;
                }
            }
            if(ans) answer++;
        }
        return answer;
    }
}
///////////////////////////////////////// 다른 사람 풀이
// 경로 값에 대한 배열 대신 경로 존재 여부만 담아서도 가능


